// 每个递归函数都有两部分：基线 条件（base case）和递归条件（recursive case）。
// 递归条件指的是函数调用自己，而基线条件则 指的是函数不再调用自己，从而避免形成无限循环。 

function countDown(i) {
    console.log(i);
    if (i <= 0) {    //基线条件
        return;
    }
    else {
        countDown(i - 1);  //递归条件
    }
}

// 递归指的是调用自己的函数。 
// 每个递归函数都有两个条件：基线条件和递归条件。 
// 栈有两种操作：压入和弹出。 
// 所有函数调用都进入调用栈。 
// 调用栈可能很长，这将占用大量的内存。
